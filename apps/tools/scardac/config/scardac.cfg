# The URL to the waveform archive where all data is stored.
# Format: [service://]location[#type]
# "service": The type of the archive. If not given, "sds://" is implied
# assuming an SDS archive. The SDS archive structure is defined as
# YEAR/NET/STA/CHA/NET.STA.LOC.CHA.YEAR.DAYFYEAR, e.g.
# 2018/GE/APE/BHZ.D/GE.APE..BHZ.D.2018.125
# Other archive types may be considered by plugins.
archive = @ROOTDIR@/var/lib/archive

# Number of threads scanning the archive in parallel.
threads = 1

# Acceptable derivation of end time and start time of successive records in
# multiples of sample time.
jitter = 0.5

# Maximum number of segments per stream. If the limit is reached no more
# segments are added to the database and the corresponding extent is flagged as
# too fragmented. Use a negative value to disable any limit.
maxSegments = 1000000

# Line-based text file of form NET.STA.LOC.CHA defining available stream IDs.
# Depending on the archive type, size and storage media used this file may
# offer a significant performance improvement compared to collecting the
# available streams on each startup. Filters defined under `filter.nslc` still
# apply.
#nslcFile = ""

# Start of data availability check given as date string or as number of days
# before now.
#filter.time.start = 

# End of data availability check given as date string or as number of days
# before now.
#filter.time.end = 

# Comma-separated list of stream IDs to process. If empty all streams are
# accepted unless an exclude filter is defined. The following wildcards are
# supported: '*' and '?'.
#filter.nslc.include = 

# Comma-separated list of stream IDs to exclude from processing. Excludes
# take precedence over includes. The following wildcards are supported: '*' and
# '?'.
#filter.nslc.exclude = 

# If set to true all data chunks are read independent of their mtime.
mtime.ignore = false

# Only read chunks modified after specific date given as date string or as
# number of days before now.
#mtime.start = 

# Only read chunks modified before specific date given as date string or as
# number of days before now.
#mtime.end = 
